from tkinter import *

class Application(Frame):
    """A GUI application"""
    
    def __init__(self, master):
        """Initializes the Frame"""
        Frame.__init__(self, master)
        self.grid()
        self.create_widgets()
        self.focus_force()
        #bind escape without including root in the initialize function of the class
        self.bind("<Escape>", self.close)
        
    def create_widgets(self):
        """Create widgets for movie type choice"""
        Label(self, text = "Choose you favorite movie type").grid(row = 0, column = 0, sticky = W)
        
        #instructions
        Label(self, text = "Select all that apply:").grid(row = 1, column = 0, sticky = W)
        
        #comedy check button
        self.comedy = BooleanVar() #You want Boolean for check buttons because you want the button either ON or OFF.
        Checkbutton(self, text = "Comedy", variable = self.comedy, command = self.update_text).grid(row = 2, column = 0, sticky = W)
        
        #drama check button
        self.drama = BooleanVar()
        Checkbutton(self, text = "Drama", variable = self.drama, command = self.update_text).grid(row = 3, column = 0, sticky = W)
        
        #romance check button
        self.romance = BooleanVar()
        Checkbutton(self, text = "Romance", variable = self.romance, command = self.update_text).grid(row = 4, column =0, sticky =W)
        
        self.result = Text(self, width = 40, height = 5, wrap = WORD)
        self.result.grid(row = 5, column = 0, columnspan = 3)
        
    def update_text(self):
        """Update text widget and display favorite movie types"""
        likes = ""
        
        if self.comedy.get(): #This means if comedy is true. don't need '==' becomes self.comedy is a boolean
            likes += "You like comedy."
        if self.drama.get():
            likes += "You like drama."
        if self.romance.get():
            likes += "You like romance."
        self.result.delete(0.0, END)
        self.result.insert(0.0, likes)
     
    
    #In order to make this close work you have to call self.master. Just calling self.destroy only deletes all the widgets
    #it will not close the actual window. calling self.master.destroy closes the window.
    #This is for binding the escape button without having the root inside the initialize function and instead having it
    #outside of the class.
    def close(self, event):     
        self.master.destroy()
        
root = Tk()
root.title("Check Buttons")
app = Application(root)

root.mainloop()
